[tool.poetry]
name = "poetry-publish"
version = "0.5.0"
description = "Helper to build and upload a project that used poetry to PyPi, with prechecks"
authors = ["JensDiemer <git@jensdiemer.de>"]
keywords=['poetry']
classifiers = [
    # http://pypi.python.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Operating System :: OS Independent',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Utilities',
]
include = ['AUTHORS', 'LICENSE']

# Will be generated from README.creole with: 'poetry run update_rst_readme'
readme='README.rst'

[tool.poetry.dependencies]
python = ">=3.7,<4.0.0"
python-creole = {version = "*", optional = true}
twine = "*"

[tool.poetry.dev-dependencies]
tox = "*"
poetry = "*"
poetry-core = "*"
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"
pytest-darker = "*"  # https://github.com/akaihola/pytest-darker
pytest-flake8 = "*"
pytest-isort = "*"
autopep8 = "*"
python-creole = "*"
pyupgrade = "*"

[tool.poetry.scripts]
update_rst_readme = "poetry_publish.self:update_poetry_publish_readme"
publish = "poetry_publish.self:publish_poetry_publish"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 100
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
line_length=100
skip_glob=[".*", "*/htmlcov/*"]
known_first_party=["poetry_publish"]
lines_after_imports=2


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* .git __pycache__ coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
# Add this to local test runs:
#    -x -p no:randomly
addopts = """
    --cov=.
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --darker
    --flake8
    --isort
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
    --maxfail 3
    -p no:randomly
"""


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{37,38,39,310}
skip_missing_interpreters = True

[testenv]
passenv = *
install_dev_deps=True
whitelist_externals = pytest
commands =
    python --version
    pytest
"""
